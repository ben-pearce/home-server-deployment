---
services:
  authelia:
    container_name: authelia
    environment:
      - AUTHELIA_JWT_SECRET_FILE=/run/secrets/authelia_jwt_secret
      - AUTHELIA_IDENTITY_PROVIDERS_OIDC_HMAC_SECRET_FILE=/run/secrets/authelia_identity_providers_oidc_hmac_secret
      - AUTHELIA_IDENTITY_PROVIDERS_OIDC_ISSUER_PRIVATE_KEY_FILE=/run/secrets/authelia_identity_providers_oidc_issuer_private_key
      - AUTHELIA_STORAGE_ENCRYPTION_KEY_FILE=/run/secrets/authelia_storage_encryption_key
      - AUTHELIA_STORAGE_POSTGRES_PASSWORD_FILE=/run/secrets/authelia_postgres_password
      - AUTHELIA_NOTIFIER_SMTP_PASSWORD_FILE=/run/secrets/smtp_password
    extra_hosts:
      - ${HOST}:172.17.0.1
    image: authelia/authelia
    secrets:
      - authelia_identity_providers_oidc_hmac_secret
      - authelia_identity_providers_oidc_issuer_private_key
      - authelia_jwt_secret
      - authelia_storage_encryption_key
      - authelia_postgres_password
      - smtp_password
    labels:
      com.centurylinklabs.watchtower.enable: true
      readme.description: The Single Sign-On Multi-Factor portal for web apps.
      readme.links.docker: https://hub.docker.com/r/authelia/authelia
      readme.links.web: https://www.authelia.com/
      traefik.enable: true
      traefik.http.middlewares.authelia.forwardauth.address: http://authelia:9091/api/verify?rd=https://${AUTHELIA_HOST}/
      traefik.http.middlewares.authelia.forwardauth.authresponseheaders: Remote-User, Remote-Groups, Remote-Email
      traefik.http.middlewares.authelia.forwardauth.trustforwardheader: true
      traefik.http.routers.authelia.entrypoints: https
      traefik.http.routers.authelia.rule: Host(`${AUTHELIA_HOST}`)
      traefik.http.routers.authelia.service: authelia-svc
      traefik.http.routers.authelia.tls.certresolver: resolver
      traefik.http.services.authelia-svc.loadbalancer.server.port: 9091
    restart: unless-stopped
    volumes:
      - ${CONFIG_DIR}/authelia:/config
      - ./.secrets/:/.secrets
  duplicati:
    container_name: duplicati
    environment:
      - PUID=0
      - PGID=0
      - TZ
    image: lscr.io/linuxserver/duplicati:latest
    labels:
      com.centurylinklabs.watchtower.enable: true
      readme.description: Open Source Backup Client.
      readme.links.docker: https://hub.docker.com/r/linuxserver/duplicati
      readme.links.web: https://www.duplicati.com/
      traefik.enable: true
      traefik.http.routers.duplicati.entrypoints: https
      traefik.http.routers.duplicati.middlewares: authelia
      traefik.http.routers.duplicati.rule: Host(`${DUPLICATI_HOST}`)
      traefik.http.routers.duplicati.tls.certresolver: resolver
    restart: unless-stopped
    volumes:
      - ${CONFIG_DIR}/duplicati:/config
      - ${CONFIG_DIR}:/source/container-configs:ro
      - ${DATA_DIR}:/source/container-data:ro
      - /mnt:/mnt
  fidi:
    container_name: fidi
    environment:
      - FIREFLY_III_ACCESS_TOKEN_FILE=/run/secrets/firefly_access_token
      - FIREFLY_III_URL=http://firefly:8080
      - VANITY_URL=https://${FIREFLY_HOST}
      - NORDIGEN_ID_FILE=/run/secrets/nordigen_id
      - NORDIGEN_KEY_FILE=/run/secrets/nordigen_key
      - TRUSTED_PROXIES=**
      - IMPORT_DIR_ALLOWLIST=/import
    image: fireflyiii/data-importer:develop
    secrets:
      - firefly_access_token
      - nordigen_id
      - nordigen_key
      - smtp_password
    labels:
      com.centurylinklabs.watchtower.enable: true
      ofelia.enabled: 'true'
      ofelia.job-exec.finance-import.command: /bin/sh -c 'for f in /import/*; do php artisan importer:import $$f; done'
      ofelia.job-exec.finance-import.schedule: 0 0 03 * * *
      readme.description: Firefly III Data Importer.
      readme.links.docker: https://hub.docker.com/r/fireflyiii/data-importer
      traefik.enable: true
      traefik.http.routers.fidi.entrypoints: https
      traefik.http.routers.fidi.middlewares: authelia
      traefik.http.routers.fidi.rule: Host(`${FIREFLY_DATA_HOST}`)
      traefik.http.routers.fidi.tls.certresolver: resolver
    restart: unless-stopped
    volumes:
      - ${CONFIG_DIR}/fidi:/import
  firefly:
    container_name: firefly
    depends_on:
    secrets:
      - firefly_postgres_password
      - firefly_app_key
      - smtp_password
    environment:
      - APP_KEY_FILE=/run/secrets/firefly_app_key
      - APP_URL=https://${FIREFLY_HOST}/
      - TRUSTED_PROXIES=**
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_CONNECTION=pgsql
      - DB_DATABASE=firefly
      - DB_USERNAME=postgres
      - DB_PASSWORD_FILE=/run/secrets/firefly_postgres_password
      - MAIL_MAILER=smtp
      - MAIL_HOST=${SMTP_HOST}
      - MAIL_PORT=465
      - MAIL_FROM=${SMTP_USER}
      - MAIL_USERNAME=${SMTP_USER}
      - MAIL_PASSWORD_FILE=/run/secrets/smtp_password
      - MAIL_ENCRYPTION=ssl
      - AUTHENTICATION_GUARD=remote_user_guard
      - AUTHENTICATION_GUARD_HEADER=HTTP_REMOTE_EMAIL
    image: fireflyiii/core:latest
    labels:
      com.centurylinklabs.watchtower.enable: true
      readme.description: Personal Finance Manager.
      readme.links.docker: https://hub.docker.com/r/fireflyiii/core
      readme.links.web: https://www.firefly-iii.org/
      traefik.enable: true
      traefik.http.routers.firefly.entrypoints: https
      traefik.http.routers.firefly.middlewares: authelia
      traefik.http.routers.firefly.rule: Host(`${FIREFLY_HOST}`)
      traefik.http.routers.firefly.tls.certresolver: resolver
    restart: unless-stopped
    volumes:
      - ${DATA_DIR}/firefly/upload:/var/www/html/storage/upload
  fsib:
    container_name: fsib
    secrets:
      - firefly_access_token
    environment:
      - FIREFLY_BASE_URL=http://firefly:8080
      - FIREFLY_TOKEN_FILE=/run/secrets/firefly_access_token
      - TELEGRAM_TOKEN
      - TELEGRAM_ALLOWED_USERS
    image: ghcr.io/ben-pearce/firefly-screenshot-bot:main
    labels:
      com.centurylinklabs.watchtower.enable: true
      readme.description: FireflyIII Screenshot Import Bot.
      readme.links.github: https://github.com/ben-pearce/firefly-screenshot-bot
    restart: unless-stopped
    volumes:
      - ${CONFIG_DIR}/fsib:/storage
  syncthing:
    container_name: syncthing
    environment:
      - PUID
      - PGID
      - TZ
    image: ghcr.io/linuxserver/syncthing
    labels:
      com.centurylinklabs.watchtower.enable: true
      readme.description: Open Source Continuous File Synchronization.
      readme.links.github: https://github.com/syncthing/
      readme.links.web: https://syncthing.net/
      traefik.enable: true
      traefik.http.middlewares.syncthingStripper.stripprefix.prefixes: /syncthing
      traefik.http.routers.syncthing.entrypoints: https
      traefik.http.routers.syncthing.middlewares: authelia,syncthingStripper
      traefik.http.routers.syncthing.rule: PathPrefix(`/syncthing{regex:$$|/.*}`)
      traefik.http.routers.syncthing.tls.certresolver: resolver
      traefik.http.services.syncthing.loadbalancer.server.port: 8384
    ports:
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp
    restart: unless-stopped
    volumes:
      - ${DATA_DIR}/syncthing:/config
      - /mnt:/storage
      - /home:/user
  vaultwarden:
    container_name: vaultwarden
    environment:
      - SMTP_HOST
      - SMTP_FROM=${SMTP_USER}
      - SMTP_PORT=587
      - SMTP_SECURITY=starttls
      - SMTP_USERNAME=${SMTP_USER}
      - SMTP_PASSWORD_FILE=/run/secrets/smtp_password
      - DOMAIN=https://${BITWARDEN_HOST}
    secrets:
      - smtp_password
    extra_hosts:
      - ${HOST}:172.17.0.1
    image: vaultwarden/server:latest
    labels:
      readme.description: Unofficial Bitwarden compatible server written in Rust.
      readme.links.github: https://github.com/dani-garcia/vaultwarden
      traefik.enable: true
      traefik.http.routers.vaultwarden.entrypoints: https
      traefik.http.routers.vaultwarden.rule: Host(`${BITWARDEN_HOST}`)
      traefik.http.routers.vaultwarden.tls.certresolver: resolver
    restart: unless-stopped
    volumes:
      - ${DATA_DIR}/vaultwarden:/data
version: '3.4'

secrets:
  smtp_password:
    file: ./.secrets/smtp_password