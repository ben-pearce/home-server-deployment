---
services:
  authelia:
    container_name: authelia
    depends_on:
      - postgres
    extra_hosts:
      - ${HOST}:172.17.0.1
    image: authelia/authelia
    labels:
      com.centurylinklabs.watchtower.enable: true
      traefik.enable: true
      traefik.http.middlewares.authelia.forwardauth.address: http://authelia:9091/api/verify?rd=https://${AUTHELIA_HOST}/
      traefik.http.middlewares.authelia.forwardauth.authresponseheaders: Remote-User, Remote-Groups
      traefik.http.middlewares.authelia.forwardauth.trustforwardheader: true
      traefik.http.routers.authelia.entrypoints: https
      traefik.http.routers.authelia.rule: Host(`${AUTHELIA_HOST}`)
      traefik.http.routers.authelia.service: authelia-svc
      traefik.http.routers.authelia.tls.certresolver: resolver
      traefik.http.services.authelia-svc.loadbalancer.server.port: 9091
    restart: unless-stopped
    volumes:
      - ${CONFIG_DIR}/authelia:/config
  duplicati:
    container_name: duplicati
    environment:
      - PUID
      - PGID
      - TZ
    image: lscr.io/linuxserver/duplicati:latest
    labels:
      com.centurylinklabs.watchtower.enable: true
      traefik.enable: true
      traefik.http.routers.duplicati.entrypoints: https
      traefik.http.routers.duplicati.rule: Host(`${DUPLICATI_HOST}`)
      traefik.http.routers.duplicati.tls.certresolver: resolver
    restart: unless-stopped
    volumes:
      - ${CONFIG_DIR}/duplicati:/config
      - ${MEDIA_DIR}/backups:/storage
      - ${CONFIG_DIR}:/source/container-configs
      - ${DATA_DIR}:/source/container-data
      - ${MEDIA_DIR}:/source/storage
  fidi:
    container_name: fidi
    environment:
      - FIREFLY_III_ACCESS_TOKEN
      - FIREFLY_III_URL=http://firefly:8080
      - VANITY_URL=https://${FIREFLY_HOST}
      - NORDIGEN_ID
      - NORDIGEN_KEY
      - TRUSTED_PROXIES=**
      - IMPORT_DIR_WHITELIST=/import
    image: fireflyiii/data-importer:develop
    labels:
      com.centurylinklabs.watchtower.enable: true
      traefik.enable: true
      traefik.http.routers.fidi.entrypoints: https
      traefik.http.routers.fidi.rule: Host(`${FIREFLY_DATA_HOST}`)
      traefik.http.routers.fidi.tls.certresolver: resolver
    restart: unless-stopped
    volumes:
      - ${CONFIG_DIR}/fidi:/import
  firefly:
    container_name: firefly
    depends_on:
      - postgres
    environment:
      - APP_KEY
      - APP_URL=https://${FIREFLY_HOST}/
      - TRUSTED_PROXIES=**
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_CONNECTION=pgsql
      - DB_DATABASE=firefly
      - DB_USERNAME=postgres
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - MAIL_MAILER=smtp
      - MAIL_HOST=${SMTP_HOST}
      - MAIL_PORT=465
      - MAIL_FROM=${SMTP_USER}
      - MAIL_USERNAME=${SMTP_USER}
      - MAIL_PASSWORD=${SMTP_PASSWORD}
      - MAIL_ENCRYPTION=ssl
    image: fireflyiii/core:latest
    labels:
      com.centurylinklabs.watchtower.enable: true
      traefik.enable: true
      traefik.http.routers.firefly.entrypoints: https
      traefik.http.routers.firefly.rule: Host(`${FIREFLY_HOST}`)
      traefik.http.routers.firefly.tls.certresolver: resolver
    restart: unless-stopped
    volumes:
      - ${DATA_DIR}/firefly/upload:/var/www/html/storage/upload
  fsib:
    container_name: fsib
    environment:
      - FIREFLY_BASE_URL=http://firefly:8080
      - FIREFLY_TOKEN=${FIREFLY_III_ACCESS_TOKEN}
      - TELEGRAM_TOKEN
      - TELEGRAM_ALLOWED_USERS
    image: ghcr.io/ben-pearce/firefly-screenshot-bot:main
    labels:
      com.centurylinklabs.watchtower.enable: true
    restart: unless-stopped
    volumes:
      - ${CONFIG_DIR}/fsib:/storage
  syncthing:
    container_name: syncthing
    environment:
      - PUID
      - PGID
      - TZ
    image: ghcr.io/linuxserver/syncthing
    labels:
      com.centurylinklabs.watchtower.enable: true
      traefik.enable: true
      traefik.http.middlewares.syncthingStripper.stripprefix.prefixes: /syncthing
      traefik.http.routers.syncthing.entrypoints: https
      traefik.http.routers.syncthing.middlewares: syncthingStripper
      traefik.http.routers.syncthing.rule: PathPrefix(`/syncthing{regex:$$|/.*}`)
      traefik.http.routers.syncthing.tls.certresolver: resolver
      traefik.http.services.syncthing.loadbalancer.server.port: 8384
    ports:
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp
    restart: unless-stopped
    volumes:
      - ${DATA_DIR}/syncthing:/config
      - ${MEDIA_DIR}:/storage
      - /home:/user
  vaultwarden:
    container_name: vaultwarden
    environment:
      - SMTP_HOST
      - SMTP_FROM=${SMTP_USER}
      - SMTP_PORT=587
      - SMTP_SECURITY=starttls
      - SMTP_USERNAME=${SMTP_USER}
      - SMTP_PASSWORD
      - DOMAIN=https://${BITWARDEN_HOST}
    extra_hosts:
      - ${HOST}:172.17.0.1
    image: vaultwarden/server:latest
    labels:
      traefik.enable: true
      traefik.http.routers.vaultwarden.entrypoints: https
      traefik.http.routers.vaultwarden.rule: Host(`${BITWARDEN_HOST}`)
      traefik.http.routers.vaultwarden.tls.certresolver: resolver
    restart: unless-stopped
    volumes:
      - ${DATA_DIR}/vaultwarden:/data
version: '3.4'