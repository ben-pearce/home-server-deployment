networks:
  rxresume:
    name: rxresume
  rxresume-web:
    name: rxresume-web
services:
  rxresume-postgres:
    container_name: rxresume-postgres
    environment:
      POSTGRES_DB: rxresume
      POSTGRES_PASSWORD: rxresume
      POSTGRES_USER: rxresume
    image: postgres:14.5
    labels:
      ofelia.enabled: 'true'
      ofelia.job-exec.rxresume-postgres-backup.command: /bin/sh -c 'pg_dump -U rxresume -d rxresume > /backups/rxresume.sql'
      ofelia.job-exec.rxresume-postgres-backup.schedule: 0 0 04 * * *
      ofelia.job-exec.rxresume-postgres-backup.user: postgres
    networks:
      - rxresume
    restart: unless-stopped
    tmpfs:
      - /var/lib/postgresql/data/pg_stat_tmp:rw,mode=1777
    volumes:
      - ${DATA_DIR}/postgres/rxresume:/var/lib/postgresql/data
      - ${DATA_DIR}/postgres/backups:/backups
  rxresume-server:
    container_name: rxresume-server
    image: amruthpillai/reactive-resume:server-latest
    restart: unless-stopped
    depends_on:
      - rxresume-postgres
    networks:
      - rxresume
      - rxresume-web
    environment:
      PUBLIC_URL: https://rxresume.${HOST}
      PUBLIC_SERVER_URL: https://rxresume.${HOST}/api
      POSTGRES_DB: rxresume
      POSTGRES_USER: rxresume
      POSTGRES_PASSWORD: rxresume
      SECRET_KEY: rxresume
      POSTGRES_HOST: rxresume-postgres
      POSTGRES_PORT: 5432
      JWT_SECRET: rxresume
      JWT_EXPIRY_TIME: 604800
    labels:
      traefik.enable: true
      traefik.docker.network: rxresume-web
      traefik.http.routers.rxresume-server.entrypoints: https
      traefik.http.routers.rxresume-server.rule: Host(`rxresume.${HOST}`) && PathPrefix(`/api`)
      traefik.http.routers.rxresume-server.middlewares: rxresume-server-strip
      traefik.http.services.rxresume-server.loadbalancer.server.port: 3100
      traefik.http.middlewares.rxresume-server-strip.stripprefix.prefixes: /api
