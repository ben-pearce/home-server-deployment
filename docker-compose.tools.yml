---
services:
  alltube:
    container_name: alltube
    image: rudloff/alltube
    labels:
      com.centurylinklabs.watchtower.enable: true
      readme.description: Web GUI for youtube-dl.
      readme.links.github: https://github.com/Rudloff/alltube
      traefik.enable: true
      traefik.http.middlewares.alltubeHeaders.headers.customrequestheaders.X-Forwarded-Path: /alltube
      traefik.http.middlewares.alltubeStripper.stripprefix.prefixes: /alltube
      traefik.http.routers.alltube.entrypoints: https
      traefik.http.routers.alltube.middlewares: alltubeHeaders, alltubeStripper
      traefik.http.routers.alltube.rule: PathPrefix(`/alltube{regex:$$|/.*}`)
      traefik.http.routers.alltube.tls.certresolver: resolver
    restart: unless-stopped
    volumes:
      - ${CONFIG_DIR}/alltube:/var/www/html/config
  cyberchef:
    container_name: cyberchef
    image: mpepping/cyberchef
    labels:
      com.centurylinklabs.watchtower.enable: true
      readme.description: The Cyber Swiss Army Knife - a web app for encryption, encoding, compression and data analysis.
      readme.links.github: https://github.com/gchq/CyberChef
      traefik.enable: true
      traefik.http.middlewares.cyberchefStripper.stripprefix.prefixes: /cyberchef
      traefik.http.routers.cyberchef.entrypoints: https
      traefik.http.routers.cyberchef.middlewares: cyberchefStripper
      traefik.http.routers.cyberchef.rule: PathPrefix(`/cyberchef{regex:$$|/.*}`)
      traefik.http.routers.cyberchef.tls.certresolver: resolver
      traefik.http.services.cyberchef.loadbalancer.server.port: 8000
    restart: unless-stopped
  huginn:
    container_name: huginn
    image: huginn/huginn
    labels:
      com.centurylinklabs.watchtower.enable: true
      readme.description: Build agents that perform automated tasks for you online.
      readme.links.github: https://github.com/huginn/huginn
      traefik.enable: true
      traefik.http.routers.huginn.entrypoints: https
      traefik.http.routers.huginn.rule: Host(`${HUGINN_HOST}`)
      traefik.http.routers.huginn.tls.certresolver: resolver
    restart: unless-stopped
    user: ${PUID}
    volumes:
      - ${DATA_DIR}/huginn/data:/var/lib/mysql
  invidious:
    container_name: invidious
    depends_on:
      - postgres
    environment:
      INVIDIOUS_CONFIG: |
        db:
          dbname: invidious
          user: postgres
          password: ${POSTGRES_PASSWORD}
          host: postgres
          port: 5432
        check_tables: true
        domain: ${INVIDIOUS_HOST}
    healthcheck:
      interval: 30s
      retries: 2
      test: wget -nv --tries=1 --spider http://127.0.0.1:3000/api/v1/comments/jNQXAC9IVRw || exit 1
      timeout: 5s
    image: quay.io/invidious/invidious:latest
    labels:
      com.centurylinklabs.watchtower.enable: true
      readme.description: An open source alternative front-end to YouTube.
      readme.links.github: https://github.com/iv-org/invidious
      readme.links.web: https://invidious.io/
      traefik.enable: true
      traefik.http.routers.invidious.entrypoints: https
      traefik.http.routers.invidious.rule: Host(`${INVIDIOUS_HOST}`)
      traefik.http.routers.invidious.tls.certresolver: resolver
    restart: unless-stopped
version: '3.4'