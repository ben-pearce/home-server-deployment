---
networks:
  uptime-kuma-web:
    name: uptime-kuma-web
include:
  - dependencies/docker-compose.zabbix.yml
services:
  uptime-kuma:
    container_name: uptime-kuma
    image: louislam/uptime-kuma:1
    labels:
      com.centurylinklabs.watchtower.enable: true
      readme.description: Self-hosted monitoring tool like "Uptime Robot".
      readme.links.github: https://github.com/louislam/uptime-kuma
      traefik.docker.network: uptime-kuma-web
      traefik.enable: true
      traefik.http.routers.uptime-kuma.entrypoints: https
      traefik.http.routers.uptime-kuma.rule: Host(`status.${HOST}`)
    networks:
      uptime-kuma-web:
    restart: always
    volumes:
      - ${DATA_DIR}/uptime-kuma:/app/data
      - /var/run/docker.sock:/var/run/docker.sock:ro
  zabbix-web:
    container_name: zabbix-web
    depends_on:
      - zabbix-postgres
      - zabbix-server
    environment:
      - DB_SERVER_HOST=zabbix-postgres
      - POSTGRES_USER=zabbix
      - POSTGRES_PASSWORD_FILE=/run/secrets/zabbix_postgres_password
      - PHP_TZ=${TZ}
      - ZBX_SERVER_HOST=zabbix-server
    image: zabbix/zabbix-web-nginx-pgsql:alpine-latest
    labels:
      com.centurylinklabs.watchtower.enable: true
      readme.description: Zabbix web frontend.
      readme.links.docker: https://hub.docker.com/r/zabbix/zabbix-web-nginx-pgsql
      traefik.docker.network: zabbix-web
      traefik.enable: true
      traefik.http.routers.zabbix.entrypoints: https
      traefik.http.routers.zabbix.rule: Host(`zabbix.${HOST}`)
      traefik.http.services.zabbix.loadbalancer.server.port: 8080
    networks:
      - zabbix
      - zabbix-web
    restart: unless-stopped
    secrets:
      - zabbix_postgres_password
version: '3.4'