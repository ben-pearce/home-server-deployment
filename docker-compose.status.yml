---
services:
  uptime-kuma:
    container_name: uptime-kuma
    image: louislam/uptime-kuma:1
    labels:
      com.centurylinklabs.watchtower.enable: true
      readme.description: Self-hosted monitoring tool like "Uptime Robot".
      readme.links.github: https://github.com/louislam/uptime-kuma
      traefik.enable: true
      traefik.http.routers.uptime-kuma.entrypoints: https
      traefik.http.routers.uptime-kuma.rule: Host(`${UPTIME_KUMA_HOST}`)
      traefik.http.routers.uptime-kuma.tls.certresolver: resolver
    restart: always
    volumes:
      - ${DATA_DIR}/uptime-kuma:/app/data
  zabbix-server:
    container_name: zabbix-server
    environment:
      - DB_SERVER_HOST=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD
    image: zabbix/zabbix-server-pgsql:alpine-latest
    labels:
      com.centurylinklabs.watchtower.enable: true
      readme.description: Open Source Monitoring Solution.
      readme.links.docker: https://hub.docker.com/r/zabbix/zabbix-server-pgsql
    ports:
      - '10051:10051'
    restart: unless-stopped
  zabbix-web:
    container_name: zabbix-web
    depends_on:
      - zabbix-server
    environment:
      - DB_SERVER_HOST=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD
      - PHP_TZ=${TZ}
      - ZBX_SERVER_HOST=zabbix-server
    image: zabbix/zabbix-web-nginx-pgsql:alpine-latest
    labels:
      com.centurylinklabs.watchtower.enable: true
      readme.description: Zabbix web frontend.
      readme.links.docker: https://hub.docker.com/r/zabbix/zabbix-web-nginx-pgsql
      traefik.enable: true
      traefik.http.routers.zabbix.entrypoints: https
      traefik.http.routers.zabbix.rule: Host(`${ZABBIX_HOST}`)
      traefik.http.routers.zabbix.tls.certresolver: resolver
      traefik.http.services.zabbix.loadbalancer.server.port: 8080
    restart: unless-stopped
version: '3.4'